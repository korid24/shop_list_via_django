# Generated by Django 3.0.6 on 2020-08-12 09:35

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('telegram_id', models.CharField(max_length=15, unique=True, verbose_name='Telegram id')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joining', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date of joining')),
                ('first_name', models.CharField(default='unknown', max_length=15, verbose_name='First name')),
                ('last_name', models.CharField(default='unknown', max_length=15, verbose_name='Second name')),
                ('nickname', models.CharField(default='unknown', max_length=15, verbose_name='Nickname')),
                ('condition', models.CharField(default='start', max_length=15, verbose_name='Condition')),
                ('lists_count', models.IntegerField(default=0, verbose_name='Lists count')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
